<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="theatreBindingSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>186, 17</value>
  </metadata>
  <metadata name="theatreBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>